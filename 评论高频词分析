# coding=utf-8
# /usr/bin/env python

"""
Author: JiangLang
Email: 1600015801@pku.edu.cn
Phone: 18800195281

date: 2020-12-09 22:11
"""

import pandas as pd
import numpy as np
import re
import jieba
import collections
from PIL import Image
import wordcloud
import matplotlib.pyplot as plt


# 华为应用市场
app_infor1 = ['全能扫描宝', '全能扫描王免费版', '扫描全能王', 'GK扫描仪全能王']

# 苹果应用市场
app_infor2 = ['拍照取字', '扫描全能宝', '扫描王', 'TextScanner']

text = ''
for app_name in app_infor1:
    comment_data = pd.read_csv('/Users/richard/desktop/营销爬虫/华为应用市场评论{}.csv'.format(app_name), header=0).iloc[:, 1:]
    for index in range(comment_data.shape[0]):
        text += comment_data.loc[index, 'comment_content']

for app_name in app_infor2:
    comment_data = pd.read_csv('/Users/richard/desktop/营销爬虫/apple store评论{}.csv'.format(app_name), header=0).iloc[:, 1:]
    for index in range(comment_data.shape[0]):
        text += comment_data.loc[index, 'comment_content']


# 文本预处理
pattern = re.compile(u'\t|\n|\.|-|:|;|\)|\(|\?|') # 定义正则表达式匹配模式
string_data = re.sub(pattern, '', text) # 将符合模式的字符去除

# 文本分词
seg_list_exact = jieba.cut(string_data, cut_all = False) # 精确模式分词
object_list = []
remove_words = [u'的', u'，',u'和', u'是', u'随着', u'对于', u'对',u'等',u'能',u'都',u'。',u' ',u'、',u',',u'！',u'中',u'在',u'了',
                u'通常',u'如果',u'我们',u'需要',u'',u'很',u'用',u'我',u'可以',u'有',u'小猿',u'搜题',u'搜',u'非常',u'就',u'这个',u'也',
               u'觉得',u'作业',u'要',u'题',u'到',u'有些',u'软件',u'不',u'就是',u'还是',u'但是',u'比',u'吧',u'跟',u'?',u'不错',u'还'] # 自定义去除词库

for word in seg_list_exact:  # 循环读出每个分词
    if word not in remove_words:  # 如果不在去除词库中
        object_list.append(word)  # 分词追加到列表

# 词频统计
word_counts = collections.Counter(object_list)  # 对分词做词频统计
word_counts_top100 = word_counts.most_common(300)  # 获取前10最高频的词

# 词频展示
mask = np.array(Image.open('picture1.png'))  # 定义词频背景
wc = wordcloud.WordCloud(scale=4,
    font_path="/System/Library/Fonts/Supplemental/Songti.ttc",
    max_words=100,  # 最多显示词数
    max_font_size=60  # 字体最大值
)

wc.generate_from_frequencies(word_counts)  # 从字典生成词云
plt.imshow(wc, interpolation="bilinear")  # 显示词云
plt.axis('off')  # 关闭坐标轴
plt.show()  # 显示图像
wc.to_file('/Users/richard/desktop/营销爬虫/扫描评论词云.jpg')
